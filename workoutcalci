# importing libraries
from dataclasses import dataclass
import numpy as np
import matplotlib.pyplot as plt

# Goals
calories_burn = 3000  # in kcal

# to store workouts addded
workout_today = []

@dataclass
class Workout:
    name: str
    sets: int
    body_part: str
    workout_type: str
    calories_burnt: int

# predefined workout types
workout_types = ["Chest", "Shoulders", "Arms", "Legs", "Back"]

# this loop continues until true, set to false so that it can run again and again
done = False

while not done:
    print("""
        1. Add a New Workout.
        2. Visualize Progress.
        3. Quit Menu.
           """)
    
    choice = int(input("Enter Your Choice: "))

    if choice == 1:
        print("Adding New Workout!!\n")
        name = input("Workout Name: ")
        sets = int(input("\nNo of Sets: "))
        body_part = input("\nUpper/Lower: ")
        
        # Select workout type from predefined list
        print("\nSelect Workout Type:")
        for i, w_type in enumerate(workout_types, 1):
            print(f"{i}. {w_type}")
        workout_type_choice = int(input("Enter the number corresponding to the workout type: "))
        
        if 1 <= workout_type_choice <= len(workout_types):
            workout_type = workout_types[workout_type_choice - 1]
        else:
            # if entered other value , it will be set to others
            print("\nInvalid choice. Setting workout type to 'Other'.")
            workout_type = "Other"
        
        calories_burnt = int(input("Calories Burnt: "))
        workout = Workout(name, sets, body_part, workout_type, calories_burnt)
        workout_today.append(workout)
        print("\nSuccessfully added!!")

    elif choice == 2:
        if workout_today:
            calories_sum = sum(workout.calories_burnt for workout in workout_today)
            sets_sum = sum(workout.sets for workout in workout_today)
# graph representation starts here
            fig, axs = plt.subplots(1, 3, figsize=(15, 5))

            # pie chart for calories burnt vs goal
            axs[0].pie([calories_sum, max(0, calories_burn - calories_sum)], labels=["Burnt", "Remaining"], autopct="%1.1f%%")
            axs[0].set_title("Calories Burnt vs Goal")

            # Bar chart for sets per body part
            body_parts = [workout.body_part for workout in workout_today]
            sets_per_body_part = {bp: sum(workout.sets for workout in workout_today if workout.body_part == bp) for bp in set(body_parts)}

            axs[1].bar(sets_per_body_part.keys(), sets_per_body_part.values())
            axs[1].set_title("Sets by Body Part")
            axs[1].set_xlabel("Body Part")
            axs[1].set_ylabel("Total Sets")

            # Pie chart for workout types
            workout_types_count = {wt: sum(1 for workout in workout_today if workout.workout_type == wt) for wt in workout_types}
            axs[2].pie(workout_types_count.values(), labels=workout_types_count.keys(), autopct="%1.1f%%")
            axs[2].set_title("Workout Types Distribution")

            plt.tight_layout()
            plt.show()
        else:
            print("No workouts added yet.")
# loop terminates when done will be set to true
    elif choice == 3:
        print("\nExiting Menu.")
        done = True
# if entered choice other than the specified one
    else:
        print("\nInvalid choice. Please try again.")
